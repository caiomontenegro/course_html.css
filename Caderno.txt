##############################################################
                        Capitulo 1
##############################################################

========================== Aula 4 ============================

A internet surgiu na guérra fria, quando o EUA se sentiu amee-
çado pelo lançamento de Sputinik pela União Soviética. 

Os EUA com medo de ter seus dados ameaçados, crirou uma pequena
rede chamada ARPANET. E para que os computadores pudessem se 
comunicar, foi criado o protocolo NCP.

Com a expansão da rede, o procolo NCP ficou inviável, então 
Bob Kahn criou o procoloco TCP, e para suprir o problema de 
idenficação, Vint Cerf criou o IP.

O exercícito não queria mais administrar a rede, e logo a 
mesma se didiviu em outras redes menores. Porém todas as redes
tirando a rede do exercícito (MILNET), queriam manter suas co-
municações, dando inicio a uma nova rede única chamada de 
Interconnect Networking, que foi abreveada para Internetworking,
e hoje é chamada de Internet.

Logo a internet se espalhou por todo o mundo através de cabos 
submarinos.

O client era uma tela preta com pequenas letras verdes, recebi-
das do servidor através do protocolo GOPHER.

Em 1993, Tim Berners-Lee criou o protocolo até hoje utilizado 
HTTP (Hyper Text Transfer Protocol) ou seja, transferência de 
hiper texto. E junto com ela, foi criada a linguagem de marcação 
HTML (hyper text markup language).

Tim, também criou a sub rede World wide web (rede de alcance 
mundial). Onde servidores especializados em http trabalham.


##############################################################
                        Capitulo 2
##############################################################

========================== Aula 1 ============================

A representação de dados no computador é em forma binária, ou
seja 1 0 que são bits (são sinais elétricos). A cada 8 bits, 
ocorre a formação de um byte que representa de fato uma letra
ou número de acordo com o código UTF-8. 

Esses sinais elétricos chegam em forma de quadrados

Também existem os multiplos de byte:

1024 bytes = 1 Kilo byte
1024 KByte = 1 Mega byte
1024 MByte = 1 Giga byte
1024 Gbyte = 1 Tera byte
         etc.

Vale lembrar que os bytes devem ser represetandos com B 
maiúsculo, do contrário será intrepretado como bit.

A conexão com a internet entre um cliente e um servidor se da
através de uma conexão com o Modem, que se conecta com uma rede
de telefonica ou de TV. O modem tem a função de modular e desmo-
dular as ondas dos sinais elétricos.

Toda máquina conectada na internet, tem um IP de idenficação.
Logo ao cliente pesquisa pelo domínio do site que deseja acessar,
exemplo:

        www.google.com

Logo esse domínio vai para o DNS, que serve com uma agenda. O DNS
pesquisará qual o IP deste dominínio para o modem realizar a 
conexão.


========================== Aula 2 ============================


Para disponibilizar um site criado, o desenvolvedor deve HOSPEDAR
o site em um servidor, nisso ele terá de escolher um domínio pa-
gando por valor anual, e pagando um valor mensal para hospeda-lo.

Domínio é sempre de nome único, vários TLDs.

O que é URL?

    URL é o endereço completo de um site, exemplo:

    www.facebook.com.br/caio

    www      = subdomínio
    facebook = domínio
    .com     = TDL
    .br      = CCTLD
    /caio    = caminho


##############################################################
                        Capitulo 3
##############################################################

========================== Aula 1 ============================

HTML e CSS

        HTML:
        
                HTML ou Hypertext Markup Language, é uma
                linguagem de conteúdo.
                O HTML é uma linguagem de conteúdo. Logo, 
                todo o conteúdo da página é informado no 
                HTML, vídeos, fotos, textos, etc...

                O HTML se utliza de tags para marcar o texto.
                Ex:

                <h1> texto </h2> 

                <h1> = abertura de tag
                texto = conteúdo
                </h1> = Fechamento de tag.

                Ex:

                <img src="foto.png">

                <img = abertura de tag
                src = parâmetro
                foto.png = valor
                
                A maioria das tags tem abertura e fechamento.

                Estrutura básica:

                <!DOCTYPE html>
                <html lang="pt-BR">
                        <head>
                                <meta charset="UTF-8">
                                <meta name="viewport"
                                content="width=device-width,
                                initial-scale=1.0">
                        </head>
                        <body>
                                <h1> OLá mundo </h1>
                        </body>
                </html>


        CSS:
                Cascading Style Sheets, são folhas de estilo
                em cascata.
                O CSS é a linguagem de estilo. Logo, todo
                estilo da página é descriminado pelo CSS, 
                cores, fundos, fontes, etc...

                O css, escolhe uma tag e o estiliza. Ex:

                h1 {
                    font: normal;
                }

                h1 = seletor
                font: normal = declaração
                font: =  propriedade
                normal = valor

        Quando se tenta abrir um site, o client solicita o HTML
        e o CSS para o servidor, e que os envia. O navegador do 
        client traduz as linguagens e os transforma na página do
        site.



========================== Aula 2 ============================


Front-End e Back-End


        Front-end:

        São linguagens e tecnologias que funcionam do lado do
        cliente. (client-side) 
        São elas: HTML, CSS e Javascript.


        Back-end:

        São linguagens e tecnolgogias que funcionam do lado do
        servidor. (server-side)
        São elas: Node, Bancos de dados, e APIs.

        Full-Stack:

        É o desenvolvedor que é capacitado tanto em server-side
        quanto em client-side


##############################################################
                        Capitulo 4
##############################################################

========================== Aula 2 ============================

Estrutura básica HTML 5

Digite o comando:

html:5 ou ! e pressione ENTER 

1 - Configure a linguagem de "en" para "pt-BR"

2 - Verifique se a codificação da linguagem está em UTF-8

3 - Confirme na tag Meta, se o conteúdo será apresentando em 100% do body

4 - Configure um título da página, que será apresentado na aba.

Tags básicas usadas:

        <h1>
                Tag de título.
        <p> 
                Tag de parágrafo
        <hr> 
                Linha horizontal



##############################################################
                        Capitulo 5
##############################################################

========================== Aula 1 ============================



A formtação em documentos HTML é feita interamente pelas marcações
e tags.

Se quiser apresentar uma tag dentro de um texto da página é 
necessário substituir os sinais de maior e menor por:

< = &lt;

< = &gt;

ex:

        LT = LESS THAN 
        GT = GREATER THAN

        &lt;p&gt; = <p>

Símbolos:

        &reg;
        &copy;
        &trade;
        &euro;
        &pound;
        &yen;
        &cent;
        &Delta;
        &uparrow;

Emojis:

Acesse pelo google: emojipedia

Escolha o emoji, selecione o código, e digite no html:

&#x + código + ;


Tags básicas usadas:

        <br>
                Tag utilizada para quebrar linhas.

        Nâo utilize várias tags BR em sequência, para espaços
        maiores, use o CSS.



##############################################################
                        Capitulo 6
##############################################################

========================== Aula 1 ============================


Imagens

        Direitos Autorais:

        Não utilize imagens públicas de qualquer local em seus
        sites e projetos. Existem imagens que são permitidas, 
        para utiliza-las:

        1- Faça a busca no Google Imagens
        2- Clique em ferramentas.
        3- Clique em direitos de uso, e selecione um:

        A- Sem filtro de licença 
                (Sem dono, ou com dono)
        B- Marcadas para reutilização com modificação:
                Maior nível de liberdade para uso. Uso e edição
        C- Marcadas para reutilização:
                Disponível para uso, mas nao edição.
        D- Reutilizazação nao comercial com modificação.
                Pode ser utlizada e editada, desde que não seja
                para fins comerciais
        E- Reutilização não comercial
                Pode utiliza-la, porém sem editar e para fins
                não comerciais.

        
        Sites para imagens livres:

        unsplash - ( fazer buscas de imagens em ingles)
        Pexels - ( '' )
        


========================== Aula 2 ============================


Formato de Imagens

JPEG - A imagem é compactada para ocupar menos espaço
PNG - Permite transparência.


JPEG a qualidade das imagens é menor, pois são compactadas, 
já as PNG permitem colocar um funto transparente, e sua qualidade
também é maior. 

O melhor formato a ser utilizado é relativo ao razão para qual a 
imagem está sendo utilizada no site.

Leve em consideração sempre o desempenho do site, que deve ter 
sempre a mehhor performance possível.



========================== Aula 3 ============================



Tamanho de Imagens

Em média uma imagem tem uma escola de 650px de largura.

Utilize o gimp para alterar o tamanho da imagem mas mantenha 
sempre a imagens originais salvas como um backup



========================== Aula 4 ============================


Para importar as imagens dentro da pagina, utilize a tag img:

<img src="" alt="">

        img = tag
        src="" = informe o caminho do local da imagem e o nome.
        alt"" = informe um texto alternativo.

        também é possível usar uma link url dentro do src.

tag básicas usadas:

        <img>

Para deixar a imagem responsiva, siga o exercício 11


========================== Aula 5 ============================


Favicon. (Icone de favorito)

 Favicon, são pequenas imagens que serão vinculadas ao lado 
 do título da página na aba do navegador.

O formato utlizado é o icone, .ico

Sites:

        iconarchive.
        Utilize o site IconArchive para buscar icones genéricos.

        favicon.cc
        Para criar uma imagem, temos a opção de acessar o site
        favicon.cc

        favicon.io
        E para transforma um png, text, ou favicon virar um 
        .ico é só acessar o site favico.io

Para utilizar o icone na página, você deve configura-lo dentro
da sessão head da página, ao lado da tag title.

1- Digite "link".

2- Selecione a opção link:favicon do VSCode.

3- Em href="" apague o conteúdo já escrito, e pressione CTRL + Space

4- Selecione o seu arquivo .ico

Uma boa prática é deixar o arquivo com o nome favicon.




##############################################################
                        Capitulo 7
##############################################################

========================== Aula 1 ============================



Hierarquia dos títulos.

        Os títulos possuem níveis dentro do HTML se iniciando 
        pelo primeiro nível, através da tag <h1>

        Como boa prática, utilize apenas um título de primeiro 
        nível por página. 

        Para subir os níveis, basta digitar <h2>, <h3>, etc...

        Lembre-se de utilizar no máximo 6 níveis por boa prática.

Para testar, tamanhos de possíveis paragrafos utilze lorem dentro 
da tag P 

1- Abra a tag de parágrafo <p>

2- Dentro digite "lore", e deixe o VS code completar




##############################################################
                        Capitulo 8
##############################################################

========================== Aula 1 ============================


Semântica do HTML

Semântica é o significado dos vocábulos, por oposição à sua forma.
Ou seja, se da mais valor ao significado do que a sua forma.

Logo, o HTML é focado na semântica, e o que é forma é destinado ao 
CSS.

Todas as tags do HTML são focados em marcar o significado do con-
teúdo, e o CSS fica focado na forma, como editar o formato no 
contéudo.

Para pesquisar se uma tag está obsoleta, pesquise no Google por:

w3 obsolete tags

========================== Aula 2 ============================


Seguindo a didática da aula anterior, podemos notar erros em 
boa parte dos desenvolvedores por esquecer o fundamento de que 
o HTML é semântico. 

Um exemplo está no uso da tag <b> para deixar um texto em negrito
e a tag <i> para itálico.

Tag B
        A tag <b> é uma tag e formato, e não deve ser utilizada...
        Uma tag que visualmente fará a mesma função e é semântica,
        é a tag <strong>, que signifca um texto de significado 
        forte.

Tab I
        A tag <i> também é uma tag de formatado, e lógicamente
        também não deve ser utilizada. Para isso, podemos usar
        a tag <EM> que visualmente terá a mesma função, porém
        dará o significado de texto em enfâse, além de alterar
        o formato.

Dica:

Para envelopar conteúdos já escritos no HTML:

        1- Selecione o conteúdo a ser envelopado
        2- Digite CTRL + SHIFT + P
        3- Pesquise por wrap with abbreviation
        4- Digite a tag sem sinais e pressione Enter.



========================== Aula 3 ============================



Seguindo os estudos de tags.

Tag MARK
        A tag mark tem a função de marcar o texto com o efeito 
        de grifa texto.

Tag Small
        A tag small é repsonsável por deixar as letras pequenas.

Tag Del
        A tag del, tem como função traçar uma linha sobre o con-
        teúdo, dando a entender que o texto deve ser lido
        porém não deve ser levado em consideração.

Tag ins
        A tag ins, tem como função sublinhar o texto, dando e 
        sua semãntica tem o significado de texto inserido.

Tag sup
        Tem por função, deixar um texto subrescrito em outro 
        texto.

Tag sub
        Tem como função, deixar um texto subscrito em outro.

Dica:

A maior parte das tags, pode ser estilizadas via css dentro da
própria tag, para isso:

        1- Digite dentro da tag o parâmetro style
        2- Coloque o parãmetro da css desejado.
        3- Digite o valor do parâmetro css escolhido.



========================== Aula 4 ============================


Dando continuidade ao estudo da aula anterior, podemos analisar
mais algumas tags.

Tag code
        A tag code tem por função, deixar as letras monoespaçadas.
        Isso significa que as letras ocuparam o mesmo espaço esté
        ticamente. É uma ótima tag para apresentar códigos.
        Apesar de facilitar a leitura de códigos, a tag code não
        irá formatar o code com indentações.

Tag pre
        A tag pre, irá obedecer as indentações e quebras de linhas
        escritar no HTML. Usada junta com a tag code, é uma ótima
        ferramenta.

Tag q
        A tag q, tem como função dar o sentido de Citação para 
        o texto, colocando entre aspas duplas.

Tag blockquote
        Semelhante a tag Q, também tem por objetivo dar o senti-
        do de citação. Porém, é designado a blocos de textos 
        maiores como estrofes. Além disso o bloco inteiro 
        ficará identado.
        Essa tag tem o parâmetro "cite", na qual o valor deve 
        ser o endereço url da fonte da citação. Esse parãmetro
        não terá função alguma para client. Sua função serve
        para complementar e auxiliar mecanismos de buscas e a 
        parte interna do site. Além de garantir os direitos de 
        autoria.

Tag abbr
        Ter por função, dar sentido de abreviação a uma sigla.
        Quando o client passar o mouse sobre a sigla, o parâ-
        metro tittle, irá apresentar o texto completo.

Tag bdo
        Essa tag, não tem muita utilidade. Tem por função 
        inverter o texto. Através do parâmetro dir, basta in-
        formar a direção:
        ltr = left do right (direção comum)
        rtl = right to left (direção contrária.)



##############################################################
                        Capitulo 9
##############################################################

========================== Aula 1 ============================


Listas 

        OL:
                Listas OL são listas ordenadas, que tem por 
                função listar o conteúdo do HTML. Sozinha, a
                tag somente irá identar o conteúdo, pois ela
                deve saber quais são os itens da lista. Logo
                ela deve ser usada em conjunto com a tag <li>
                que marcara um conteúdo como sendo um item da
                lista. O client, irá tomará a função de orde-
                nar o conteúdo.
                Obs: A partir do HTML5, o fechamento da tag
                <li> se tornou opcional.

                Parâmetros da tag OL:

                Type:
                        É possível determinar o tipo da lista
                        através do parâmetro type:

                        1 = lista numérica
                                Sub parãmetro start:
                                O número no qual a lista irá
                                iniciar.
                        
                        A/a = A lista passa a ser formada em or-
                        dem alfabética. No caso de "A", a lista
                        será em letras maiúsculas, e no caso de
                        "a", a lista será formada em letras min-
                        núsculas.

                        I/i = Será listado em algarismos românos.
                        Segue a mesma regra de diferenciação para
                        minúsculo ou maiúsculo.

                        Obs: Os valores A/a e I/i, também possuem
                        o sub parâmetro start, porém ele continua 
                        tendo os seus valores preenchidos numérica-
                        mente.

        UL:
                Ao contrário da Tag OL, a tag UL apresenta uma
                lista não ordenada (onde não há importancia para
                a ordem). Usada sozinha, esteticamente também só 
                irá indentar o conteúdo, e deve ser utilizada 
                em conjunto com a tag <li> para identifcar os i-
                tens da lista.

                Parâmetros da tag UL:

                Type:

                        Não preencher = circulo preenchido.

                        circle = circulo em branco

                        square = quadrado preenchido.



========================== Aula 2 ============================


Listas Aninhadas.


É importante ter conciencia de que as listas podem conter
outras listas dentro delas. Basta ir aninhando as tags da 
forma desejada. É recomendado que se altere o tipo das listas
dentro de outras, para uma melhor interpretação do conteúdo.


Dica da Aula:

No VSCode, vocẽ pode criar multiplos cursores para edição do 
conteúdo. Para isso, siga os passos:

        1 - Clique no local desejado para criar o cursos.

        2 - Segue o botão ALT, e clique no próximo local
        desejado para criar cursor.



Listas de Definição.

        As listas de defnição são utilizadas como um dicionário.
        Onde a lista mostra determinados títulos, com suas defi-
        nições.

        As listas de denifição são configuras com as seguintes
        tags:

        1 - <dl> Inicia a lista de Definição
        2 - <dt> Título do conteúdo.
        3 - <dd> Definição do título do conteúdo.(<dt>)




##############################################################
                        Capitulo 10
##############################################################

========================== Aula 1 ============================


Links e Âncoras

Links são maneiras do client acessar outras páginas de outro
ou mesmo site através de âncoras (pontos clicáveis chamados 
de hyperlinks).

Para criar uma âncora, siga os passos:

        1 - Envelope o texto a virar uma âncora com a tag
        <a>

        2 - Coloque o link no parãmetro href="".

        3 - Para recuperar o viwer, utilize o parâmetro
        target="_blank". Desta maneira o link será aberto 
        em uma nova aba.

        4 - Tenha por hábito utilizar o novo parâmetro 
        rel="external" para determinar que o link é externo
        com relação ao seu site.

        Obs: Para links externos, é possível determinar para
        mecânismos de busca que você não da um aval de acesso
        para esse link. Para isso basta digitar no parãmetro
        rel="" o valor "nofollow"


========================== Aula 2 ============================


Links internos

É importante saber que para links internos também é necessário
configurar da maneira correta as suas tags, para que mecanismos
de busca como Google, possam direcionar viwers da maneira corre-
ta para o seu site.

Para configurar links internos, é mais simples do que links
externos, não sendo necessário informar a URL inteira, apenas
o local do arquivo local/servidor:

        1 - Envelope o texto a virar âncora com a tag <a>

        2 - Em caso do da página destino estar na mesma pasta,
        basta informar o nome do arquivo. Do contrário, informe
        o caminho completo.

        3 - Com o parâmetro rel="", informe se o usuário estará
        avançando as páginas, ou recupando para páginas ante-
        riores:
                rel="next" = avançando conteúdo
                rel="back" = recuando conteúdo.

        4 - Aqui também é recomendado usar o parãmetro target, 
        porém agora com o valor "_self" que indica que o client
        será direcionado a um link do próprio site.


========================== Aula 2 ============================


Links para Download.

Para colocar conteúdos para download é simples, basta colocar o 
conteúdo dentro de uma pastar exclusiva pra downloads (boa prática),
envelopar o conteúdo com a tag <a> e preencher alguns parãmetros:

        1 - Envelope o conteúdo com a tag <a>

        2 - Informe o caminho do conteúdo com o parãmetro href=""

        3 - Coloque o parâmetro download, e preencha o valor com
        o nome do arquivo que será baixado pelo client

        4 - Insira o parâmetro type, e preencha o seu valor
        de acordo com o tipo do arquivo que será baixo. 
        Em caso de dúvidas vide a lista neste link:

        https://www.iana.org/assignments/media-types/media-types.xhtml



##############################################################
                        Capitulo 11
##############################################################

========================== Aula 1 ============================


Mídias:

Nesta aula, foram criadas imagens em 3 tamanhos pelo programa GIMP.
As mesmas, serão utilizadas na próxima aula.



========================== Aula 2 ============================


Imagem dinâmica:

Utlizando as mesmas imagens criadas na aula anterior, vamos criar
um site onde apresente essas imagens de forma dinâmica, onde o 
tamanho irá ordenar qual imagem deve ser apresentada.

Utilize a tag PICTURE, e dentro dela coloque a imagem padrão através
da tag IMG. Lembre-se que a imagem padrão deve ser a menor, ou a maior
possível.

Acima, da tag IMG, vá colocando em ordem a imagem em outros tamanhos
através da tag SOURCE. 

        Source:
        A tag source possue os seguintes parâmetros:
                Media: 
                        O tamanho máximo ou minimo em pixels, para
                        que a regra seja atribuida.
                srcset:
                        O caminho do arquivo.
                type:
                        A pasta da imagem, mais o tipo do arquivo.

Ex:

<picture>
        <source media="(max-width: 750px)" srcset="images/imagem-p.png" type="image/png">
                // caso a imagem-m.png exceda 750px de largura, será apresentada A
                // imagem-p.png
        <source media="(max-width: 1050px)" srcset="images/imagem-m.png" type="image/png">
                // Caso a imagem-g.png exceda 1050px de largura, será apresentada a 
                // imagem-m.png
        <img src="images/imagem-g.png" alt="flex image">
</picture>


========================== Aula 3 ============================


Audios

Existem mais de uma forma de apresentar audios dentro do seu 
site. Segue abaixo algumas maneiras de inseri-los:

Tag <audio>

        Para utilizar a tag áudio, existem dois caminhos:

        A - Use a tag audio, e preencha o parâmetro src=""
        com o caminho do arquivo de áudio, dando exclusi-
        vidade para os formatos mp3, wav e ogg.

                Para apresentar os play automatico ao 
                carregar a página, coloque o parâmetro:
                                autoplay
                Para mostrar o play, utilize o parâmetro
                controls.

        B - Abra as tag audio, mas não utilize nenhum
        parâmetro. Para informar o caminho do arquivo, 
        abra uma tag:

                        <source src>
        
        A mesma se encarregará de localizar o arquivo, 
        dentro dela preencha oa parâmetros src=""
        com o caminho do arquivo, e type=""
        com audio/"formato do arquivo".

        Alguns formatos e seus respesctivos types:

        .mp3 = audio/mpeg
        .ogg = audio/ogg
        .wav = audio/wav  (arquivos muito pesados)

        É importante entender que dentro da tag audio, 
        é possível colocar vários audios através da tag
        source, obedecendo a ordem desejada à ser tocada.

        #################################################

        Alguns parâmetros extras da tag <audio>.

        preload:
                Configura, um pre carregador do arquivo
                em seu site. Valores:
                -Auto
                        Somente considera que o site ter-
                        minou de carregar, após o áudio
                        também ser totalmente carregado.
                -Metadata(mais recomendado)
                        Irá carregar apenas alguns dados
                        do arquivo, como data, tamanho,
                        formato.
                -none
                        Nâo irá carregar nada do arquivo
                        de áudio.

        autoplay:
                Toca o áudio, assim que o site é carregado,
                não é muito recomendado pois pode fazer com 
                que a página demore muito para ser carregada
                dependendo do arquivo.

        controls:
                Exibe um pequeno player, para que o usuário
                possa controlar a musica.

        loop:
                Quando o áudio terminar, o mesmo começa a 
                tocar do início automaticamente.


========================== Aula 4 ============================


Videos

Dando sequencia no conteúdo de mídas, vamos falar agora ví-
deos.

Os vídeos mais suportados pelos navegadores atualmente são:

-MP4 / M4V 
-WEBM
-OGV

Para não ter problemas com os codecs, sempre suba o vídeo
pelo menos em MP4/M4V OU WEBM.

Dica: Caso o cliente exige um vídeo grande, e que o mesmo
fique hospedado no próprio servidor. Utilize o programa 
HAND BREAK.

É importante ter o vídeo em vários formatos para que a 
maioria dos navegadores usados pelos seus clientes, sejam
compatíveis com o video.

Tag video

        Para apresentar o vídeo basta usa a tag <video>
        que tem sua utilização semelhante a tag <audio>.
        E também possui dois caminhos, o primeiro é 
        o mais simples, porém menos indicado. Devido a 
        possibilidade de incompatilibilidade com browsers
        pois só é possível colocar um formato de arquivo.


        A - Caminho Simples
                1 - Use a tag <video>
                2 - Preencha o parâmetro src="" com o caminho 
                do arquivo
                3 - Insira o parâmetro controls 
        
        B - Caminho recomendado
                1 - Use a tag <video>
                2 - Dentro da tag video, utilize a tag:
                <source src>

        parâmetros:
        
        Poster:
                Com o parametro poster, é possível usar uma
                thumbnail(poster) para o vídeo, quando o 
                client ainda não deu play no vídeo.

        loop:
                Reinicia o vídeo automaticamente assim
                que ele reinicia.


========================== Aula 5 ============================


Videos externos.

Como vimos anteriormente, hospedar vídeos de forma interna
no nosso servidor, podem gerar um custo muito alto de banda.
Além de deixar o nosso site muito pesado.

Uma alternativa a isso é utilizar sites que estão hospedados
em outro servidor, ou seja, são vídeos externos ao nosso
servidor.

Vamo checar duas opções mais conhecidas:

        Youtube
                O modo mais simples para incorporar vídeos
                do youtube, é:

                1 - acessar o vídeo desejado pela
                plataforma. 

                2 - Clique em compartilhar, e selecione
                incorporar.

                3 - Selecione as opções que deseja, e cli-
                que em COPIAR.

                4 - Insira o código copiado diretamente
                No HMTL, e deixe a mágia acontecer.

        Vimeo
                Semelhante ao youtube, faça:

                1 - Acesse o video que deseja incorporar.

                2 - Clique em compartilhar.

                3- Faça as configurações que deseja, e 
                clique em código.

                4 - Copie o codigo, diretamente em seu html.


##############################################################
                        Capitulo 12
##############################################################

========================== Aula 1 ============================

CSS

Cascading Style Sheets são as folhas de estilo em cascata.

As CSS, podem ser aplicadas de 3 formas:

1- Inline:
        É a maneira mais simplificada, e usada em casos
        pontuais, onde o estilo é imposto nas tags usando
        o parãmetro style. Ex:

        <p style="backgroundcolor="black">
            lorem
        </p>

        // Neste caso, dentro do parãmetro style, foi 
        // informado qual o estilo desejado no fundo.

        Mesmo que hajam tag's iguais, o estilo será 
        imposto somente na tag onde o parâmetro style
        foi inserido.


========================== Aula 2 ============================


2 - Css interno:
        Do contrário do estilo Inline, o uso de CSS interno
        o código das CSS de toda a página é escrito junto 
        dentro da tag <style>, que é inserida dentro da 
        tag <head>


========================== Aula 3 ============================


3 - CSS Externo:
        A forma mais comum e recomendada pra impletar suas
        CSS. É semelhante ao CSS inteiro, porém é criado 
        um arquivo exclusivo para as CSS. E os arquivos 
        HTML que terão o estilo do arquivo CSS, apenas
        precisará criar uma conexão com o arquivo CSS, a-
        través da tag <link stylesheets>

        COmo boa prática, declare as regras do arquivo CSS
        logo no início do mesmo, um exemplo de regra é:

        @charset "UTF-8;


O uso de um ou mais modos de declarar as CSS, não impede 
o uso de outro modo.



##############################################################
                        Capitulo 13
##############################################################

========================== Aula 1 ============================

Emoções de cores

As cores, são responsáveis por criar emoções nos nossos clientes
e viewers. Existem estudos, que mostram que as cores são respon-
sáveis até pela conversão de clientes. Isso tudo através das
cores escolhidas, hamornia, e psicologia por trás da cor.

Círculo Cromático.

O circulo cromático, serve para nos auxiliar na escolha da
paleta de cores que iremos escolher para o nosso site. Tendo 
em vista as emoções das cores, existem estratégias pré-definidas
para usarmos na escolha. São elas:

Cores frias / cores quentes:
        As frias dão sensação de tranquilidade e sabedoria.
        Já as quentes, dão sensação de calor e proximidade.

Cores complementares:
        Cores contrárias umas as outras no circulo cromático.
        Oferecem o maior contraste

Cores Análogas:
        São as cores vizinhas entre si, e oferecem a maior
        harmônia entre si.

Análogas + complementar
        Seleciona-se um grupo de cores análogas, e uma
        cor complementar para oferecer contraste.

Analogas Relacionadas
        São duas cores análogas, mais uma cor não vizinha
        às escolhidas, porém bem próxima. Oferecendo harmonia
        e um pouco de constraste

Cores Intercaladas
        Quando se escolhe 3 cores intercaladas no circulo
        cromático. Oferencendo um balanço entre harmonia e 
        constraste.

Cores Triádicas:
        São escolhidas cores do circulo, que conectadas, formam
        um triângulo. Gera um bom constrates entre as cores.

Cores em quadrado
        Semelhante a triádicas, são escolhidas 4 cores que co-
        nectadas formam um quadrado.

Cores Tetrádicas
        São selecionadas 4 cores, foram dois pares de cores
        vizinhas. Conectadas, devem formar um retângulo no 
        circulo cromático.

Monocromia.
        COmo o nome já diz, é escolhida apenas uma cor, onde
        é manuseada sua saturação e brilho, dando o visual
        de contraste.

Como aplicar essas tecnicas?

Podemos usar a ferramenta do adobe, mas nos ajudar selecionar
as cores:

        color.adobe.com/pt/

No modo CRIAR, podemos escolher o modo de cores RGB, e sele-
cionar a regra de harmonia que queremos criar.

No modo Explorar, podemos podemos usar paletas prontas.


========================== Aula 2 ============================


Cores no CSS.

Formas de representar as cores através do CSS.

Nome:
        Digitando o nome da cor em inglês, e depois ajustando
        o brilho e contraste através do VSCode.

Hexadecimal:
        Representando a cor através de código hexadecimal.
        <!-- Hexadecimal 1 2 3 4 5 6 7 8 9 A B C D E F -->
        Todas as cores são formadas por uma quantidade de
        azul, verde e azul. Exemplo:

                #0000FF

          # = Inicia o código hexadecimal
         00 = Primeiros dois zeros é a quantidade de vermelho
         00 = Terceiro e quarto zero é a quantidade de verde
         FF = Quantidade de azul.

         Logo não temos verde e nem vermelho neste código,
         porém temos quantidade máxima de azul. 

RGB (decimal):
        Dessa forma declaramos explicitamente o termo "rgb", 
        depois a quantida de verde, vermelho e azul dentro 
        dos parâmtros. Exemplo:

                rgb(0, 255, 0)

        rgb = declaração de cor
          0 = primeiro zero quantidade de vermelho
        255 = quantidade de verde
          0 = quantidade de azul

        Logo, não temos as cores vermelho e azul no código, 
        porém temos o máximo de quantidade de verde.

Caracteristica das cores:
        Dessa forma é declarada as 3 caracteriscas das cores
        que são matís, saturação e luminosidade. Ex:

                hsl(240, 100%, 50%)
 
        hsl  = declaração de cor
        240  = matís
        100% = saturação
         50% = luminosidade

        Com essa combinação, temos a cor azul.


========================== Aula 3 ============================


Conteúdo foi todo anotado nas aula 2


========================== Aula 4 ============================


Paleta de Cores:

Sabendo das regras anteriores de harmonização, para criar 
a nossa paleta de cores, devemos usar no máximo de 5 cores,
contando com a cor principal escolhida de acordo com os 
objetivos do site.

Ferramentas:

        Ferramenta oficial da Adobe

        color.adobe.com/pt/

        Outra ferramenta:

        Paletton.com
        
        Para quem não tem idéia do que usar:

        coolors.com


========================== Aula 5 ============================


Capiturando cores.

Colorzilla:
        A extensão Colozilla para googlechrome permite, 
        o uso de um conta gota, que consegue absorver qualquer
        cor dentro de uma página. 

        1- Clique no menu da extensão
        
        2- Clique em Page COlor Picker

        3- Clique na cor que deseja descobri o código.
        O mesmo será copiado automaticamente.


========================== Aula 6 ============================


Gradiente(degradê)

        Para realizar um degradê no css. É necessário usar 
        o parâmetro backgroud-image, em sequência digitar a 
        função linear-gradient, informar a direção e em
        sequeência fornecer as cores. Ex:

        body {
                backgroud-image: linear-gradient(to-right, blue, pink)
        }

        É possível determinar a espaçamento de cada cor, rela-
        tiva a outra, informando a porcentagem desejada.

        A direção também pode ser informada em graus, onde:

        90° = Lateral
        45° = Diagonal
        180°= Vertical
        (Para inverter a ordem as cores, basta colocar um sinal
        de menos antes do valor informado em graus.)

        É possível colocar quantas cores quiser dentro da função

        Também é possível fazer na direção de cima para baixo
        ou de baixo para cima. Mas antes é necessário rea-
        lizar uma configuração global nas CSS:

        * {
                height: 100%
        }

        Também é possível usar a função radial-gradient, como
        exemplo, usando o valor circle.


========================== Aula 7 ============================


Parãmetros CSS usados na aula:

color
        Valor é o nome da cor ou valor hexadecimal.
        Cor do texto.

background-image        
        linear-gradient(to right, pink, purple)

        Tradução:
        background image = (fundo com cor ou imagem dinâmica)
        linear-gradiente = (Degradê linear)
        radial-grandient = (Degradê em radial)
        to right         = Direção do degradê
        pink             = Cor de início
        purple           = Cor final


width
        Valor em "px" ou "%"
        Largura do seletor

height 
        Valor em "px" ou "%"
        Altura do seletor

padding
        valor em "px"
        pequeno espaçamento entre o conteúdo, e os limites
        do seletor

margin
        valor em "px" ou "%"
        Margem externa do seletor com o fundo da página.

text-align
        valores: right, left, bottom, top, center, justify
        Alinhamento do conteúdo dentro do seletor

border-radius
        Valor em "px" ou "%".
        Curvatura das bordas do seletor.

box-shadow
        Valores:
           px = espaçamento Lateral
           px = espaçamento inferior
           px = espalhamento da sombra
        black   cor da sombra
        Gera uma sombra no seletor.

        Dica: Trabalhe a transparência da sombra

Text-shadow
        Exatamente o parâmetro anterior, porém para textos.



##############################################################
                        Capitulo 14
##############################################################

========================== Aula 1 ============================



Tipografia

A tipografia tem início no século 15, onde os monges copistas/
amanuenses, eram responsáveis para produzir os livros.

Quando Johannes Gutenberg, criou a prensa mecanica em 1450.

O termo vem de duas palavras gregas:

        tipo = typos - impressão
        grafia = graphía - escrita

        Estudo de como escrever coisas em telas/papel

A tipografia, como as cores, também gera emoções.


========================== Aula 2 ============================


Anotomia dos tipos:

Tipos, é cada uma das fontes.

Itens Métricos:

        Na produção de um tipo, sempre é levado em consideração pri-
        meiramente a letra "x" minúscula. Onde as demais letras seguem
        a sua altura. Em sequência é avaliado a altura das letras ma-
        iúsculas. E finalmente, após isso, é calculado a altura do 
        "vazamento" superior de algumas letras como a letra "h", que
        é chamado de acendente, e o vazamento inferior das letras, como
        a letra "g", que são chamados de descendentes.

E a altura total, desde a descendente até a altura das letras
maiúsculas, são o corpo.

Anatomicos geométricos:

        Serifas:
                Pequenos vazamentos laterais das letras em algumas 
                fontes.
                O objetivo é criar uma linha de altura e base ima-
                ginária entre as letras, facilitando a leitura de 
                forma inconciente.

        Hastes:
                Hastes são as barras contidas em algumas letras, 
                como por exemplo "L" "H" "B".
        
        Filete:
                São traçados horizontais que cruzam algumas letras,
                exemplo: "e" "a" "B"

        Arco:
                São curvaturas contidas em algumas letras. Por 
                exemplo: "n" "m" "u"
        
        Esporão:
                Contido em algumas fontes, o esporão serve para
                dar base a algumas letras, e tem a aparência de
                um pequeno salto alto. Ex: "b" "d" 
        
        Vértice:
                Ponta extrema contida na parte mais alta ou baixa
                da letra. Ex: "A" "V" "W" "M"

        Terminal:
                Uma ponta que não esta presa em outro lugar, con-
                tido em algumas letras. Por exemplo: "r" "e"


Anatomicos humanizados:

        Braço:
                São componentes que partem de uma haste. Exemplo:
                "k" "F"
        
        Perna:
                São componentes que saem da aste, com direção a 
                a parte inferior da letra. Exemplo: "k"

        Pé: 
                Normalmente são ons destão localizadas as Serifas
                porém, existem fontes sem serifas que possuem pés.
                Exemplo: "i" "a" 

        Espinha:
                Normalmente são curvaturas no centro da letra.
                Exemplo: "S" "Z"

        Barriga:
                É a conexão curvada entre duas hastes. Exemplo:
                "b" "d" "p"

        Olho:
                São os pequenos espaçamentos dentro das letras,
                exemplo:
                "A" "O" "Q" "e"

        Calda:  
                Vazamentos inferiores contidos em algumas letras,
                exemplo: "q" "g" 

Glifo:
        Glifo são as letras, e o conjunto de todas os glifos do 
        mesmo grupo, é chamado de fonte.

Familia Tipografica:
        É o nível de negrito contido em um glifo. Exemplo:
        
                light     = Letra fina
                normal    = comum
                SemiBold  = Semi negrito
                bold      = negrito
                ExtraBold = extra negrito.

        Nem todas as fontes possuem todos os itens da Familia
        tipográfica.


Serif e Sans Serif.

        Serifados, são textos com as serifs (vide o conteúdo
        abordado acima)

        Sans Serif, são textos sem as serifs.

        Dica:

        Textos longos em tela, de preferência a Sans Serif
        com cores complementares (contraste)

Monoespaçada

        O tamanho lateral das letras, é exatamente o mesmo.

Handrwiting.

        Simula a escrita feita a mão, como letras cursivas.

Display
        
        São fontes comemorativas, normalmente apresentadas 
        em conteúdos mais discontraídos.



========================== Aula 2 ============================


Famílias de fontes:

Safe-Combination:
Alguns navegadores ou computadores não possuem determinada fonte,
neste caso é comum, determinar uma ordem de fontes a serem exibidas
no caso de uma não estar disponível, será usada a próxima fonte 
imposta. Consulte Safe Combinations no google, e acesse:
                
                CSS web safe fonts.


========================== Aula 3 ============================


Tamanhos: (Seguindo o W3C)

Existem duas medidas de tamanho que podemos seguir:

        - Medidas Absolutas:
                
                cm = centimetro
                mm = milimetro
                in = polegada
                px = pixels
                pt = pontos
                pc = paica
        
        - Medidas Relativas:

                em = relativo ao tamanho atual da fonte
                ex = relativo a altura x de uma fonte
                rem = relativo ao root.
                vw = relativo a largura da tela
                vh = relativo a altura da tela
                %  = porcentagem

        A W3C, recomenta o PX (pixel) como medida absoluta
        e EM (altura do M) como relativo. Valores padrão:

        1 em ou 16px.


========================== Aula 4 ============================


Peso da Fonte:

        Para se utilizar das configurações de peso da fonte, 
        primeiro é necessaŕio:

         1 - Import o URL:
         2 - Escolher a font-family: 'work Sans' , "fonte"
         3 - Escolher font-weight:  
                                lighter = magro
                                normal  = comum
                                bold    = negrito
                                bolder  = extra negrito.
        
        Font Style

                italic = itálico
                normal = comum

        Text-decoration:

                underline: sublinhado

        Não são todas as fontes que suportam essas configu-
        rações.

Logo as confiturações mais usadas serão:

        - font-family
        - Font-weight
        - font-size
        - font-style

        Podemos simplificar o uso dessas quatro confi-
        gurações de font, com apenas um parâmetro.
        Chamamos isso de shorthand:

        O shorthand pra fontes, obedece a ordem:

        font-style > font-weight > font-size > font Family.

        Exemplo no exercício 17.


========================== Aula 5 ============================


Fontes externas

        Podemos usar fontes externas, através de links. Já que
        as fontes já instaladas nos navegadores são muito limi-
        tadas.

        O google oferece uma gama de fontes muito grande 
        para serem utilizadas:

        fonts.google.com

        1 - Escolha a fonte no google Fonts
        2 - COloque a regra no início do arquivo CSS, informado
        no google fonts
        3 - Digite o nome da fonte em font-family ou no terceiro 
        falor de font.

        Exemplos no exercício 18.


========================== Aula 5 ============================


Fontes externas baixadas:

        Além de usar fontes externadas linkadas, também podemos
        baixar fontes externas. Passo a passo:

        1 - Acesse o site dafont.com
        2 - Pesquise pela fonte desejada. (Se atente aos glifos disponíveis)
        3 - Baixe a fonte, e extraia os arquivos TTP ou OTP 
        para uma pasta fonts.
        4 - Crie uma regra no arquivo CSS com o Parãmetro font-face
        5 - Crie um nome para font no parâmetro font-family
        5 - Indique o caminho do arquivo, e o formato. Sendo eles:
                TTP = trutype
                OTP = opentype

        Exemplo no exeríccio 18 > fonte02.html


========================== Aula 6 ============================


Capturando fontes.

        Passo a passo:

        1 - Baixe a extensão Fonts Ninja do Google CHorme
        2 - Clique em start
        3 - Clique sobre a fonte para obter todas as informa-
        ções.


========================== Aula 7 ============================


Capturando Fontes de Imagens.

        Existem 3 sites que podemos usar para capturar as fontes.
        Caso não funcione em um, tente outro. ( O resultado não
        é 100% preciso).
        Sites:

        - whatfontis.com
        - fontsquirrel.com
        - myfonts.com

        Tire um print da imagem com a fonte, ou baixe a imagem 
        com a fonte. 

        Abra o site, e envie a imagem no local indicado.

        Se possível, edite a imagem para criar constrate na 
        imagem.


========================== Aula 6 ============================


O conteúdo será praticado no exercício 17.

Alinhamento de texto:

text-align:
Existem 3 tipos:

        - Center 
                O conteúdo fica centralizado.
        - Right 
                O contúdo fica alinhado a direita.
        - Left 
                O conteúdo fica alinhado a esquerda. (Padrão)
        -justify
                O conteúdo fica alinhado tanto na direita
                como na esquerda.

        Passo a passo:

        1 - Dentro do seletor abra o parâmetro text-align:
        2 - Digite um dos valore informados acima.


text.indent:
        Serve para criar paragro no blocos de textos.
        O valor é imposto em EM ou PX.



##############################################################
                        Capitulo 15
##############################################################

========================== Aula 1 ============================


Usando iDs 

É possível criar IDs nas tags nas quais queremos dar uma esti-
lização especial.

Ex:

        <h1> Olá Mundo </h1>

        <h1 id="especial"> Olá Brasil </h1>

        O segundo título, tem um ID único. No qual podemos
        estilizar ou usa-lo de maneira especial, o identi-
        ficando pelo seu ID "especial"

Dentro do CSS, o ID é encontrado através do símbolo "#".

Ex:

        #especial {
                backgroundcolor: blue;
        }

        Dessa forma somente o conteúdo sobre a tag com ID
        "especial" terá a sua cor de fundo azul

Exemplos no exercício 19


========================== Aula 2 ============================


Class

Como boa prática solicitada pelo W3C, não se deve
colocar o mesmo ID em mais de uma tag, a fim de 
editar um grupo inteiro com o mesmo ID. Um ID só
pode ser utlizado dentro de uma única TAG e nunca
repetido.

Para suprir essa necessidade usamos as CLASSES.

Ex:

        <h1> Olá Mundo </h1>

        <h1 class="básico"> Olá Brasil </h2>

        Lembre-se de nunca colocar o nome da classe com o 
        nome da formatação que será incluída como "Azul", "negrito",
        etc. 

        O nome da classe, deve ser sempre a função do conteúdo 
        contido na classe

Dentro do CSS, a classe é encontrado através do símbolo ".".

É possível aplicar mais uma classe dentro de um elemento HTML.
Assim como um elemento pode ter um ID e uma classe. Porém o ID
será se sobrepor à classe.

Como boa prática, leve em consideração a hierarquia 
dos elemeentos. Ex:

h1 {

}

h1#teste {

}

.teste {

}

Exemplos no exercício 19.


========================== Aula 3 ============================


Pseudo-Classes

Pseudo-Classes, são classes que são ativadas quando um elemento
ou classe, muda de estado. Ex: 

        A classe hover, só é ativada quando o cursor do mouse
        passa por cima do elemento com a classe.

As pseudo-classes, devem estar relacionadas a um elemento ou
a uma classe.

As psudo-classes também estão relacionadas a um estado de um
elemento.

Dentro do CSS, a Pseudo-Classe é encontrado através do símbolo ":".

Ex:
        HTML:

        <h1> Title </h1> 
        <div> 
            Lorem
        </div>

        CSS:
        
        div:hover {
                color: yellow;
        }

        Com essa pseudo-classe, asism que o mouse passar sobre o 
        elemento <div> a cor do texto irá se alterar par blue.

Extra:

        É possível criar um elemento "filho"  dentro do CSS.
        Ex:

        No arquivo HTML temos:

                <h1> Olá mundo </h1> 
                <div>
                    <p> Lorem </p>
                </div>
                <p>
                    Olá aluno.
                </p>
        
        Podemos escolher editar somente o paragrafo dento do 
        elemento <div>:

        No arquivo CSS:

                div > p {
                        backgroundcolor: blue;
                }

        Neste caso somente o parâgrafo dentro de div, terá
        o seu fundo com a cor azul.

        Somando isso com as pseudo Classes podemos usar 

        CSS:

                div > p {
                        display: none;
                }

                // isso remove a exibição do conteúdo.

                div:hover > p {
                        display: block;
                }

                // Isso irá mostrar o conteúdo assim que o 
                cursor do mouse passar por cima do elemento 
                <div>

Pseudo-classes:


:visited = Altera o elemento caso o link já tenha sido visitado

:active  = Altera o elemento caso o usuário clique nele.

:checked = Altera elemetendo que pode ser selecionados via check
box por exemplo.

:empty = Classe que irá alterar quaisquer elementos que não 
tenham filhos.

:Focus = classe que irá se acionada caso o usuário selecione o 
elemento via teclado ou mouse.

Exemplos no exerício 20


========================== Aula 4 ============================


Pseudo-elementos

Podem agir nas classes, elementos e IDs. Eles mexem no conteúdo
do elemento do HTML

Os pseudo Elementos são representado por "::".

Exemplos:

::before = Pode-se incluir conteúdo que virá antes do elemento

::after = Pode-se incluir conteúdo que virá depois do elemento.


##############################################################
                        Capitulo 16
##############################################################

========================== Aula 1 ============================


Box-Model

Tudo o que é exibido na tela, é uma caixa. 

Uma caixa pode ser colocada dentro da outra, criando uma 
hierarquia de caixas, formano dum ANINHAMENTO.

A caixa exatamente do tamanho do content(conteúdo)

Medidas da caixa:

altura   = height
largura  = width

Preenchimento  = espaçamento entre box e border
borda          = boder (linha que contorna o box)
margem         = espaçamento externo da borda
contorno       = Contorno da borda, dentro da margem.

Tipos de box:

Box-level:

A largura dele é sempre 100% da tela, dada essa informação,
Caso o box de cima não tenha completado a largura, o box-level
irá quebrar a linha e será apresentado abaixo.

Inline-level:

Ao contrário do box-level, o Inline-level irá manter o conteúdo
na mesma linha de outro box, caso o box anterior não ocupe 
toda a largura da tela, o inline-level caiba na largura restante

Exemplo de Box-level:

<div>
        A div, é uma box que exclusivamente ocupa a largura 
        inteira da tela, e deve ser usada justamente com esse
        proposito.

<h1> - <h6>
<p>
<main>
<header>
<footer>
<nav>
<article>
<aside>
<form>
<video>

exemplo de inline-level:
        
<span>
        O span, é semelhante a div, mas sua diferença está
        justamente na sua utilização, que deve ser destinada 
        quando o conteúdo não deve ocupar toda a largura da 
        tela e quebrar a linha.

<a>
<code>
<small>
<strong>
<em>
<sup> - <sub>
<label>
<button>
<input>
<select>


Podemos alterar essas carácteristicas pré estabelicidas desses
elementos digitando as opções:

display: block  ->  Fará com que o elemento se torne box-level

display: inline block -> Fará com que o elemento se torne um 
inline-level

========================== Aula 2 ============================


As confirgurações da box, são pré configuradas pelo user-agent.

Configurações de Border:

boder-style:
        solid  - linha 
        dashed - tracejado
        dotted - pontilhado
        double - Linha dupla
        groove - marca em 3D

Exemplos no exercício 21


========================== Aula 3 ============================

Margens:

COmo ja visto no exercício 17, podemos configurar
a margem de acordo com o tamanho que queremos.
Porém, isso pode afetar a responsividade do site.

Um exemplo, disso é centralizar o box no centro da página, se 
optarmos por configurar manualmente a margem para centraliza-lo
dependendo do tamanho do monitor do usuário, o conteúdo ficará
torto...

Uma solução simples para isso, é usar a configuração:

h1 {
        margin: auto;
}

Short-hands e simplificações no exerícicio 21

========================== Aula 4 ============================


Tags de agrupamento

Além das tags vistas, também existem as tags de agrupamento.
Elas existem para seperar os conteúdos da página de forma 
semântica. 

Exemplos:

        <header>   = Cabeçalho do página
        <main>     = Conteúdo principal da página
        <footer>   = Rodapé da página.
        <nav>      = Navegação da página (links)
        <div>      = Divisões com semântica geral
        <span>     = Divisões para trechos pequenos e pontuais.
        <section>  = Sessões da página (normalmente dentro de main)
        <article>  = Artigos (normalmente dentro de sections)
        <aside>    = Sub artigos.

Exemplos no exercício 21 (caixa 2)


========================== Aula 5 ============================


Box-shadow

Colocando sombra em caixas. O box-shadow, ja é um shor-hand.
Iremos fazer o estudo diretamente via short-hand

Ex:
        box-shadow: 1px 2px 3px black;

        1px   = Espalhamento horizontal
        2px   = Espalhamento vertical
        3px   = Espalhamento da sombra
        black = Cor da sombra.

        Dica: Aumente a transparência da cor para dar um 
        efeito mais realista.


========================== Aula 6 ============================


Border-radius

Border radius é uma forma de se configurar a borda da box.

Exemplos:

        border-radius: 10px 20px 30px 40px;

        10px = ponta esquerda superior
        20px = ponta direita superior
        30px = ponta direita inferior
        40px = ponta esquerda inferior

        Short-hands:

        border-radius 10px 40px;

        10px = superior esquerda e inferior direita
        40px = superior esquerda e inferior direita


========================== Aula 7 ============================


Bordas Decoradas

Este metódo serve para utilizar bordar personalizáveis na página.
Segue abaixo um passo a passo para criar e utilizar uma borda
personalizada utilizando gimp:

1 - Clique em Arquivo > Novo.

2 - Coloque 80px de altura e largura.

3 - Clique em Avanaçado > Resolução X e Y de 70.

4 - Cor de fundo transparente.

5 - Puxe duas reguas horizontais e duas reguas verticais.
de forma simétrica e que se pareça um jogo da velha.
A borda será desenhada nos quadrados externos.

6 - Faça um desenho um selecione uma forma geométrica, e a 
insira em um dos quadros externos, em sequẽncia pintea.

7 - Clique em duplicar camada no canto inferior direito do Gimp.
Depois clique na ferramenta de movimento do canto superior 
esquerdo do gimp. Caso não consiga selecionar a imagem 
duplicada, pressione CTRL + SHIFT + A

6 - Copie a camada do circulo para os outros quadrados
externos.

9 - Exporte o arquivo em formato PNG para a pasta de 
destino.

10 - No arquivo CSS e insira o code:

        border: 20px solid black;
        padding: 10px;
        border-image-source: url('CAMINHO DA IMAGEM PNG')
        border-image-slice: 20;
        border-image-repeat: repeat;

        Ajuste o slice de acordo com a imagem 
        (Use o devtools para lhe auxiliar)


Dùvidas:

1 - Icone de link
2 - Deixar o vídeos responsivos



##############################################################
                        Capitulo 17
##############################################################

========================== Aula 1 ============================


Comçando um Projeto

Este captulo é destinado a um passo a passo para concluir o 
desafio 10. ( O mesmo já foi feito )



========================== Aula 2 ============================


Instruções de como Projeto deve ser feito.


========================== Aula 3 ============================


Planejamento de Site:

1 - Layout

Use o site mockFlow.com, crie uma conta.

Siga o vídeo da aula para instruçoes completas.

2 - Cores

Use o Adobecolors para escolher uma paleta de cores.


========================== Aula 4 ============================


Estruturando o HTML.

A estrutura básica do HTML de uma página, pode seguir o 
modelo:

head
body
    header
        nav
    main
    article
        aside
    footer


========================== Aula 5 ============================


Organização do conteúdo.

Organize o texto com as tags de títulos e parágrafos.

Adcione BBR nos links necessários.

No ínicio do CSS, faça um reset  do padding e margin:

* {
        padding: 0px;
        margin: 0px;
}

========================== Aula 6 ============================


Variáveis em CSS.

É possível criar variáveis dentro do CSS para facilitar na 
estilização do HTML.

Exemplo com paleta de cores:

:root {
        --cor0: #00001;
        --cor1: #00002;
        --cor2: #00003;
        --cor3: #00004;
}

pronto, agora é possível usar o nome da váriavel nas estiliazações
ao invés do código hexadecimal da cor.

Isso também é possível fazer com fontes:

:root {
        --font-padrão: arial, verdana, helvetica, sans-serif;
        --font-title: normal, helvetica.
}


========================== Aula 7 e 8 ============================


Reponsividade

AO invés de usar apenas valores fixos de largura. Podemos 
usar valores máximos e mínimos de largura, para aumentar 
sua responsividade.

Largura máxima:
        max-width: 800px;
        O valor máximo de largura que o box/elemento irá
        alcançar é 800px

Largura mínima:
        min-width: 320px;  (média de largura de um celular)
        O valor mínimo de largura que o box/elemento
        irá alcançar é 320px


Responsividade em imagens:

Adcione width: 100%.

Opcional:
        Usar o code:
        <picture>
                <source media>   Imagem cortada
                <img>            Imagem completa.
        </picture>

Para centralizar imagens use o comando:
        
        display: block;

        Esse comando é necessários, pois imagens não
        são consideradas blocos.


========================== Aula 9 ============================

Efeitos adcionais:

É possísel criar um pequeno efeito na classe hover do CSS:

botão {
        transition-duration: 0.5s;
}

// Isso fara que com que qualquer efeito que aconteça 
no seletor Botão, demore 0.5 segundos para se concluir.

botão:hover {
        backgroundcolor: green; 
}

Isso fará com que o fundo do botão fique verde quando cursor
do mouse passar por cima.


========================== Aula 10 ============================

Configurações Extras no CSS:

Text-indent - cria um parágrafo.

line-height - Altura da linha (espaçamento entre as linhas)

color transparente - Cor transparente (ótimo para fades)


========================== Aula 11 ============================

Editando listas

Lists-style-position  - Faz com que os bullets fiquem dentro da box
lists-tyle-type       - troca o simbolo do bullet por um emote,
                        basta informar o codigo do emote com 
                        uma barra contrária. Ex:
                                \2714 - SInal de check
                                \00a0 - espaço.
                        Obs: Isso não é compatível com todos os
                        navegadores.


========================== Aula 12 ============================


Responsividade com vídeos.

1 - Envolope o video em uma div

2 - Coloque uma class = "video"

3 - Coloquei um backgroundcolor para ajudar na visualização.

5 - Na div coloque position: relative e um padding-bottom de 50%

6 - No inframe coloque position: absolute para ter acesso a todas
as medidas

7 - Em top e left coloque 5% para iniciar os testes.

8 - Width e Height coloque 90% para iniciar os testes.

10 - Ajuste o paddint-bootom da div, para ajustas as barras
pretas do vídeo.